Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.2
**** Job starts ****
Thu Mar 30 21:49:57 EDT 2023
**** JHPCE info ****
User: aramnaut
Job id: 3085254
Job name: PRECAST_k5-15
Hostname: compute-093.cm.cluster
Task id: 8
Unloading conda_R/4.2
Loading conda_R/4.2.x

The following have been reloaded with a version change:
  1) conda_R/4.2 => conda_R/4.2.x


Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.11.0
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/4.2.x
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Fatal error: cannot open file '01_PRECAST_run.R': No such file or directory
**** Job ends ****
Thu Mar 30 21:49:59 EDT 2023
Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.2
**** Job starts ****
Thu Mar 30 23:44:09 EDT 2023
**** JHPCE info ****
User: aramnaut
Job id: 3085528
Job name: PRECAST_k5-15
Hostname: compute-093.cm.cluster
Task id: 8
Unloading conda_R/4.2
Loading conda_R/4.2.x

The following have been reloaded with a version change:
  1) conda_R/4.2 => conda_R/4.2.x


Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.11.0
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/4.2.x
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Error in library("Seurat") : there is no package called ‘Seurat’
Calls: suppressPackageStartupMessages -> withCallingHandlers -> library
Execution halted
**** Job ends ****
Thu Mar 30 23:44:12 EDT 2023
Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.2
**** Job starts ****
Fri Mar 31 09:23:46 EDT 2023
**** JHPCE info ****
User: aramnaut
Job id: 3085633
Job name: PRECAST_k5-15
Hostname: compute-098.cm.cluster
Task id: 8
Unloading conda_R/4.2
Loading conda_R/4.2

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.11.0
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/4.2
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Error in readRDS(seuList, file = here("processed-data", "Seurat", "DG_seuList.rds")) : 
  object 'seuList' not found
Execution halted
**** Job ends ****
Fri Mar 31 09:24:07 EDT 2023
Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.2
**** Job starts ****
Fri Mar 31 09:29:16 EDT 2023
**** JHPCE info ****
User: aramnaut
Job id: 3085639
Job name: PRECAST_k5-15
Hostname: compute-098.cm.cluster
Task id: 8
Unloading conda_R/4.2
Loading conda_R/4.2

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.11.0
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/4.2
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Error in readRDS(seuList, file = here("processed-data", "Seurat", "seuList.rds")) : 
  object 'seuList' not found
Execution halted
**** Job ends ****
Fri Mar 31 09:29:36 EDT 2023
Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.2
**** Job starts ****
Fri Mar 31 09:47:13 EDT 2023
**** JHPCE info ****
User: aramnaut
Job id: 3085650
Job name: PRECAST_k5-15
Hostname: compute-098.cm.cluster
Task id: 8
Unloading conda_R/4.2
Loading conda_R/4.2

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.11.0
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/4.2
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Error in Load(seuList, file = here::here("processed-data", "Seurat", "seuList.Rdata")) : 
  could not find function "Load"
Execution halted
**** Job ends ****
Fri Mar 31 09:47:34 EDT 2023
Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.2
**** Job starts ****
Fri Mar 31 09:51:15 EDT 2023
**** JHPCE info ****
User: aramnaut
Job id: 3085673
Job name: PRECAST_k5-15
Hostname: compute-098.cm.cluster
Task id: 8
Unloading conda_R/4.2
Loading conda_R/4.2

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.11.0
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/4.2
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.2
**** Job starts ****
Fri Mar 31 09:55:30 EDT 2023
**** JHPCE info ****
User: aramnaut
Job id: 3085675
Job name: PRECAST_k5-15
Hostname: compute-098.cm.cluster
Task id: 8
Unloading conda_R/4.2
Loading conda_R/4.2

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.11.0
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/4.2
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Error in CreatePRECASTObject(seuList = seuList) : 
  CreatePRECASTObject: check the argument: seuList! Each Seurat object in seuList must include  the spatial coordinates saved in the meta.data, named 'row' and 'col'!
Execution halted
**** Job ends ****
Fri Mar 31 09:56:24 EDT 2023
Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.2
**** Job starts ****
Fri Mar 31 15:45:07 EDT 2023
**** JHPCE info ****
User: aramnaut
Job id: 3086741
Job name: PRECAST_k5-15
Hostname: compute-098.cm.cluster
Task id: 8
Unloading conda_R/4.2
Loading conda_R/4.2

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.11.0
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/4.2
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 4770
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 3434
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 4727
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 3774
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 4563
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 3847
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 3414
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 4865
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 4920
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 4975
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 4255
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 3787
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 4868
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 4594
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 3215
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Find the spatially variables genes by SPARK-X...

## ===== SPARK-X INPUT INFORMATION ====
## number of total samples: 4677
## number of total genes: 5000
## Running with single core, may take some time 

## Testing With Projection Kernel
## Testing With Gaussian Kernel 1
## Testing With Gaussian Kernel 2
## Testing With Gaussian Kernel 3
## Testing With Gaussian Kernel 4
## Testing With Gaussian Kernel 5
## Testing With Cosine Kernel 1
## Testing With Cosine Kernel 2
## Testing With Cosine Kernel 3
## Testing With Cosine Kernel 4
## Testing With Cosine Kernel 5
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Warning messages:
1: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
2: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
3: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
4: In FUN(newX[, i], ...) : There are p-values that are exactly 1!
[[1]]
An object of class Seurat 
2000 features across 4770 samples within 1 assay 
Active assay: RNA (2000 features, 1209 variable features)

[[2]]
An object of class Seurat 
2000 features across 3434 samples within 1 assay 
Active assay: RNA (2000 features, 873 variable features)

[[3]]
An object of class Seurat 
2000 features across 4727 samples within 1 assay 
Active assay: RNA (2000 features, 1338 variable features)

[[4]]
An object of class Seurat 
2000 features across 3774 samples within 1 assay 
Active assay: RNA (2000 features, 1010 variable features)

[[5]]
An object of class Seurat 
2000 features across 4563 samples within 1 assay 
Active assay: RNA (2000 features, 1375 variable features)

[[6]]
An object of class Seurat 
2000 features across 3847 samples within 1 assay 
Active assay: RNA (2000 features, 1392 variable features)

[[7]]
An object of class Seurat 
2000 features across 3414 samples within 1 assay 
Active assay: RNA (2000 features, 1137 variable features)

[[8]]
An object of class Seurat 
2000 features across 4865 samples within 1 assay 
Active assay: RNA (2000 features, 1275 variable features)

[[9]]
An object of class Seurat 
2000 features across 4920 samples within 1 assay 
Active assay: RNA (2000 features, 1412 variable features)

[[10]]
An object of class Seurat 
2000 features across 4975 samples within 1 assay 
Active assay: RNA (2000 features, 1378 variable features)

[[11]]
An object of class Seurat 
2000 features across 4255 samples within 1 assay 
Active assay: RNA (2000 features, 1408 variable features)

[[12]]
An object of class Seurat 
2000 features across 3783 samples within 1 assay 
Active assay: RNA (2000 features, 1236 variable features)

[[13]]
An object of class Seurat 
2000 features across 4868 samples within 1 assay 
Active assay: RNA (2000 features, 1273 variable features)

[[14]]
An object of class Seurat 
2000 features across 4594 samples within 1 assay 
Active assay: RNA (2000 features, 1422 variable features)

[[15]]
An object of class Seurat 
2000 features across 3212 samples within 1 assay 
Active assay: RNA (2000 features, 989 variable features)

[[16]]
An object of class Seurat 
2000 features across 4677 samples within 1 assay 
Active assay: RNA (2000 features, 352 variable features)

Neighbors were identified for 4770 out of 4770 spots.
Neighbors were identified for 3434 out of 3434 spots.
Neighbors were identified for 4727 out of 4727 spots.
Neighbors were identified for 3774 out of 3774 spots.
Neighbors were identified for 4563 out of 4563 spots.
Neighbors were identified for 3846 out of 3847 spots.
Neighbors were identified for 3414 out of 3414 spots.
Neighbors were identified for 4865 out of 4865 spots.
Neighbors were identified for 4918 out of 4920 spots.
Neighbors were identified for 4975 out of 4975 spots.
Neighbors were identified for 4253 out of 4255 spots.
Neighbors were identified for 3783 out of 3783 spots.
Neighbors were identified for 4868 out of 4868 spots.
Neighbors were identified for 4594 out of 4594 spots.
Neighbors were identified for 3212 out of 3212 spots.
Neighbors were identified for 4677 out of 4677 spots.
Intergrative data info.: 16 samples, 2000 genes X 68678 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 0.398201 
diff Energy = 24.940385 
diff Energy = 5.901604 
diff Energy = 4.324035 
diff Energy = 3.751249 
diff Energy = 8.148828 
diff Energy = 2.857392 
Finish ICM step! 
iter = 2, loglik= -42835544.000000, dloglik=0.980053 
predict Y and V! 
diff Energy = 4.356903 
diff Energy = 0.151601 
diff Energy = 9.202852 
diff Energy = 3.033466 
diff Energy = 20.757420 
diff Energy = 1.052746 
diff Energy = 5.388668 
diff Energy = 5.301786 
diff Energy = 0.847455 
diff Energy = 1.495296 
diff Energy = 13.934420 
diff Energy = 13.626377 
diff Energy = 0.151368 
diff Energy = 1.643711 
diff Energy = 4.086283 
diff Energy = 4.578721 
Finish ICM step! 
iter = 3, loglik= -42401664.000000, dloglik=0.010129 
predict Y and V! 
diff Energy = 28.910498 
diff Energy = 1.423552 
diff Energy = 1.780783 
diff Energy = 16.261050 
diff Energy = 40.680431 
diff Energy = 10.712206 
diff Energy = 5.431546 
diff Energy = 15.345892 
diff Energy = 14.768216 
diff Energy = 13.129271 
diff Energy = 64.581643 
diff Energy = 14.828695 
diff Energy = 5.339350 
diff Energy = 7.023259 
diff Energy = 12.625868 
diff Energy = 12.800636 
Finish ICM step! 
iter = 4, loglik= -42231716.000000, dloglik=0.004008 
predict Y and V! 
diff Energy = 16.819152 
diff Energy = 7.319278 
diff Energy = 3.821224 
diff Energy = 11.051670 
diff Energy = 42.607625 
diff Energy = 2.562577 
diff Energy = 23.761267 
diff Energy = 1.828894 
diff Energy = 19.152742 
diff Energy = 7.430698 
diff Energy = 38.283835 
diff Energy = 20.376834 
diff Energy = 0.977774 
diff Energy = 14.330707 
diff Energy = 2.987582 
diff Energy = 4.856465 
Finish ICM step! 
iter = 5, loglik= -42142476.000000, dloglik=0.002113 
predict Y and V! 
diff Energy = 19.733426 
diff Energy = 10.481815 
diff Energy = 9.367816 
diff Energy = 10.495825 
diff Energy = 28.401208 
diff Energy = 6.185026 
diff Energy = 24.010771 
diff Energy = 12.696840 
diff Energy = 9.912623 
diff Energy = 11.388746 
diff Energy = 34.258768 
diff Energy = 15.137513 
diff Energy = 2.786328 
diff Energy = 4.933102 
diff Energy = 8.839337 
diff Energy = 19.130385 
Finish ICM step! 
iter = 6, loglik= -42090076.000000, dloglik=0.001243 
predict Y and V! 
diff Energy = 3.467603 
diff Energy = 0.569467 
diff Energy = 10.338743 
diff Energy = 32.238136 
diff Energy = 10.023538 
diff Energy = 14.475132 
diff Energy = 10.884100 
diff Energy = 18.675501 
diff Energy = 7.166992 
diff Energy = 35.820008 
diff Energy = 5.097614 
diff Energy = 1.404617 
diff Energy = 1.447882 
diff Energy = 2.158637 
diff Energy = 28.607045 
Finish ICM step! 
iter = 7, loglik= -42056724.000000, dloglik=0.000792 
predict Y and V! 
diff Energy = 14.513483 
diff Energy = 5.134207 
diff Energy = 2.938216 
diff Energy = 10.854529 
diff Energy = 2.750830 
diff Energy = 2.392553 
diff Energy = 0.454660 
diff Energy = 2.947706 
diff Energy = 1.661845 
diff Energy = 31.110121 
diff Energy = 16.636142 
diff Energy = 6.607148 
diff Energy = 13.223755 
diff Energy = 1.114323 
diff Energy = 19.355445 
Finish ICM step! 
iter = 8, loglik= -42034352.000000, dloglik=0.000532 
predict Y and V! 
diff Energy = 0.281301 
diff Energy = 4.112652 
diff Energy = 11.887174 
diff Energy = 3.073289 
diff Energy = 9.716713 
diff Energy = 9.640171 
diff Energy = 5.474126 
diff Energy = 2.511594 
diff Energy = 5.730680 
diff Energy = 2.862686 
diff Energy = 10.549349 
diff Energy = 19.505795 
diff Energy = 10.359773 
diff Energy = 12.993827 
diff Energy = 5.975794 
diff Energy = 19.281063 
Finish ICM step! 
iter = 9, loglik= -42018240.000000, dloglik=0.000383 
predict Y and V! 
diff Energy = 0.202477 
diff Energy = 2.318572 
diff Energy = 3.288268 
diff Energy = 9.396159 
diff Energy = 6.397392 
diff Energy = 0.431600 
diff Energy = 2.027643 
diff Energy = 2.205017 
diff Energy = 0.143095 
diff Energy = 21.150407 
diff Energy = 3.841301 
diff Energy = 3.573113 
diff Energy = 0.620207 
diff Energy = 4.709283 
Finish ICM step! 
iter = 10, loglik= -42006140.000000, dloglik=0.000288 
predict Y and V! 
diff Energy = 2.164402 
diff Energy = 2.413568 
diff Energy = 0.027229 
diff Energy = 2.231036 
diff Energy = 10.327810 
diff Energy = 1.622635 
diff Energy = 4.466175 
diff Energy = 16.467927 
diff Energy = 4.397492 
diff Energy = 10.720557 
diff Energy = 1.143436 
diff Energy = 12.205843 
diff Energy = 12.509909 
diff Energy = 5.256947 
diff Energy = 8.482541 
Finish ICM step! 
iter = 11, loglik= -41996860.000000, dloglik=0.000221 
predict Y and V! 
diff Energy = 7.393281 
diff Energy = 0.577917 
diff Energy = 2.986413 
diff Energy = 1.234320 
diff Energy = 6.832336 
diff Energy = 2.935457 
diff Energy = 2.634757 
diff Energy = 10.198394 
diff Energy = 15.561901 
diff Energy = 4.694765 
diff Energy = 5.838218 
diff Energy = 3.086603 
diff Energy = 1.558854 
diff Energy = 0.293960 
Finish ICM step! 
iter = 12, loglik= -41989288.000000, dloglik=0.000180 
predict Y and V! 
diff Energy = 1.689296 
diff Energy = 2.122242 
diff Energy = 2.930108 
diff Energy = 0.569959 
diff Energy = 7.638304 
diff Energy = 1.249725 
diff Energy = 1.466655 
diff Energy = 4.055271 
diff Energy = 4.135096 
diff Energy = 4.336012 
diff Energy = 7.980731 
diff Energy = 3.963486 
diff Energy = 2.276694 
diff Energy = 7.001472 
Finish ICM step! 
iter = 13, loglik= -41983088.000000, dloglik=0.000148 
predict Y and V! 
diff Energy = 1.882057 
diff Energy = 2.467131 
diff Energy = 0.784795 
diff Energy = 6.694830 
diff Energy = 0.049677 
diff Energy = 0.108036 
diff Energy = 1.394465 
diff Energy = 9.421919 
diff Energy = 0.877642 
diff Energy = 15.335591 
diff Energy = 8.941720 
diff Energy = 6.550869 
diff Energy = 0.438732 
diff Energy = 0.895332 
Finish ICM step! 
iter = 14, loglik= -41977820.000000, dloglik=0.000125 
predict Y and V! 
diff Energy = 1.632218 
diff Energy = 3.818575 
diff Energy = 4.148594 
diff Energy = 0.520321 
diff Energy = 0.755065 
diff Energy = 4.729960 
diff Energy = 3.669474 
diff Energy = 1.693003 
diff Energy = 10.929970 
diff Energy = 7.161196 
diff Energy = 7.086823 
diff Energy = 5.328964 
diff Energy = 0.352302 
diff Energy = 9.718345 
Finish ICM step! 
iter = 15, loglik= -41973408.000000, dloglik=0.000105 
predict Y and V! 
diff Energy = 4.990784 
diff Energy = 2.065893 
diff Energy = 0.954783 
diff Energy = 0.481186 
diff Energy = 3.693844 
diff Energy = 5.033114 
diff Energy = 3.669528 
diff Energy = 6.289177 
diff Energy = 1.419392 
diff Energy = 0.787714 
diff Energy = 11.605855 
diff Energy = 1.442595 
diff Energy = 0.869526 
diff Energy = 1.064355 
Finish ICM step! 
iter = 16, loglik= -41969556.000000, dloglik=0.000092 
predict Y and V! 
diff Energy = 8.481226 
diff Energy = 1.041277 
diff Energy = 0.447375 
diff Energy = 0.723826 
diff Energy = 0.427984 
diff Energy = 0.224035 
diff Energy = 1.647082 
diff Energy = 7.622169 
diff Energy = 9.546110 
diff Energy = 1.241245 
diff Energy = 1.337638 
diff Energy = 4.724305 
Finish ICM step! 
iter = 17, loglik= -41966228.000000, dloglik=0.000079 
predict Y and V! 
diff Energy = 2.340217 
diff Energy = 5.877133 
diff Energy = 4.125212 
diff Energy = 0.188863 
diff Energy = 1.495040 
diff Energy = 1.495018 
diff Energy = 1.559734 
diff Energy = 7.138860 
diff Energy = 3.090921 
diff Energy = 11.163669 
diff Energy = 2.952883 
diff Energy = 6.281499 
diff Energy = 0.425454 
diff Energy = 0.119305 
Finish ICM step! 
iter = 18, loglik= -41963348.000000, dloglik=0.000069 
predict Y and V! 
diff Energy = 6.766002 
diff Energy = 1.263564 
diff Energy = 0.379192 
diff Energy = 3.957176 
diff Energy = 3.816911 
diff Energy = 4.986057 
diff Energy = 1.591345 
diff Energy = 4.222612 
diff Energy = 1.577444 
diff Energy = 18.731161 
diff Energy = 3.151225 
diff Energy = 7.895909 
diff Energy = 8.351570 
Finish ICM step! 
iter = 19, loglik= -41960680.000000, dloglik=0.000064 
predict Y and V! 
diff Energy = 0.388408 
diff Energy = 1.029673 
diff Energy = 2.548501 
diff Energy = 0.358909 
diff Energy = 0.219508 
diff Energy = 3.978875 
diff Energy = 2.575442 
diff Energy = 3.974243 
diff Energy = 5.015827 
diff Energy = 3.735393 
diff Energy = 11.613267 
diff Energy = 1.262649 
diff Energy = 2.161736 
diff Energy = 6.155624 
diff Energy = 0.123700 
Finish ICM step! 
iter = 20, loglik= -41958356.000000, dloglik=0.000055 
predict Y and V! 
diff Energy = 0.180631 
diff Energy = 1.626073 
diff Energy = 3.862737 
diff Energy = 3.985954 
diff Energy = 0.694632 
diff Energy = 1.739975 
diff Energy = 3.080008 
diff Energy = 0.631394 
diff Energy = 15.314261 
diff Energy = 1.608097 
diff Energy = 0.069697 
diff Energy = 1.645349 
diff Energy = 8.365392 
Finish ICM step! 
iter = 21, loglik= -41956192.000000, dloglik=0.000052 
predict Y and V! 
diff Energy = 9.381676 
diff Energy = 0.057588 
diff Energy = 1.590368 
diff Energy = 3.653014 
diff Energy = 1.501650 
diff Energy = 0.734035 
diff Energy = 11.497200 
diff Energy = 3.388416 
diff Energy = 0.823740 
diff Energy = 2.731943 
diff Energy = 6.844013 
diff Energy = 0.055507 
diff Energy = 3.870538 
diff Energy = 0.457035 
Finish ICM step! 
iter = 22, loglik= -41954260.000000, dloglik=0.000046 
predict Y and V! 
diff Energy = 1.456473 
diff Energy = 1.331702 
diff Energy = 2.548063 
diff Energy = 0.269294 
diff Energy = 0.877350 
diff Energy = 3.845414 
diff Energy = 1.159603 
diff Energy = 1.481330 
diff Energy = 4.340208 
diff Energy = 0.386966 
diff Energy = 9.002930 
diff Energy = 0.492956 
diff Energy = 2.701713 
diff Energy = 1.235751 
diff Energy = 5.030935 
Finish ICM step! 
iter = 23, loglik= -41952328.000000, dloglik=0.000046 
predict Y and V! 
diff Energy = 0.737131 
diff Energy = 3.092612 
diff Energy = 0.234827 
diff Energy = 14.667045 
diff Energy = 4.968475 
diff Energy = 0.820231 
diff Energy = 1.728098 
diff Energy = 0.976042 
diff Energy = 2.204277 
diff Energy = 4.210304 
diff Energy = 0.997235 
diff Energy = 0.519225 
diff Energy = 0.781592 
diff Energy = 0.479158 
diff Energy = 3.084436 
Finish ICM step! 
iter = 24, loglik= -41950472.000000, dloglik=0.000044 
predict Y and V! 
diff Energy = 4.225795 
diff Energy = 1.522057 
diff Energy = 0.209384 
diff Energy = 0.132138 
diff Energy = 0.301568 
diff Energy = 3.753956 
diff Energy = 1.492319 
diff Energy = 3.590990 
diff Energy = 1.479190 
diff Energy = 2.587088 
diff Energy = 1.025735 
diff Energy = 0.508364 
diff Energy = 5.357791 
Finish ICM step! 
iter = 25, loglik= -41948704.000000, dloglik=0.000042 
predict Y and V! 
diff Energy = 3.380068 
diff Energy = 5.341617 
diff Energy = 4.733775 
diff Energy = 0.331112 
diff Energy = 1.858430 
diff Energy = 0.222677 
diff Energy = 6.862206 
diff Energy = 2.946171 
diff Energy = 0.391033 
diff Energy = 1.112605 
Finish ICM step! 
iter = 26, loglik= -41947068.000000, dloglik=0.000039 
predict Y and V! 
diff Energy = 0.864119 
diff Energy = 18.108585 
diff Energy = 2.541505 
diff Energy = 3.047518 
diff Energy = 0.277736 
diff Energy = 4.844689 
diff Energy = 0.972856 
diff Energy = 3.335768 
diff Energy = 6.352905 
diff Energy = 4.558018 
diff Energy = 0.861540 
diff Energy = 1.230759 
diff Energy = 2.108665 
diff Energy = 1.032702 
diff Energy = 5.160761 
Finish ICM step! 
iter = 27, loglik= -41945456.000000, dloglik=0.000038 
predict Y and V! 
diff Energy = 2.781027 
diff Energy = 4.422512 
diff Energy = 2.315205 
diff Energy = 0.710195 
diff Energy = 3.310595 
diff Energy = 2.536302 
diff Energy = 0.843994 
diff Energy = 2.105313 
diff Energy = 2.833977 
diff Energy = 5.904712 
diff Energy = 1.994240 
diff Energy = 0.800910 
diff Energy = 3.141387 
diff Energy = 1.651180 
diff Energy = 0.188104 
Finish ICM step! 
iter = 28, loglik= -41943892.000000, dloglik=0.000037 
predict Y and V! 
diff Energy = 0.711697 
diff Energy = 0.092485 
diff Energy = 1.112100 
diff Energy = 2.183287 
diff Energy = 7.873212 
diff Energy = 0.942223 
diff Energy = 2.097736 
diff Energy = 0.766394 
diff Energy = 1.923631 
diff Energy = 0.951638 
diff Energy = 0.651910 
diff Energy = 0.384265 
diff Energy = 3.562594 
Finish ICM step! 
iter = 29, loglik= -41942296.000000, dloglik=0.000038 
predict Y and V! 
diff Energy = 5.207593 
diff Energy = 2.333184 
diff Energy = 2.568583 
diff Energy = 3.070210 
diff Energy = 0.491132 
diff Energy = 2.354320 
diff Energy = 2.096755 
diff Energy = 0.151989 
diff Energy = 2.298488 
diff Energy = 3.548710 
diff Energy = 0.085041 
diff Energy = 3.300762 
diff Energy = 0.325384 
diff Energy = 3.048798 
Finish ICM step! 
iter = 30, loglik= -41940884.000000, dloglik=0.000034 
4848.292 sec elapsed
[1] "Reproducibility information:"
[1] "2023-03-31 17:16:06 EDT"
    user   system  elapsed 
4999.557  453.272 5456.627 
─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.2.1 Patched (2022-08-30 r82775)
 os       CentOS Linux 7 (Core)
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       US/Eastern
 date     2023-03-31
 pandoc   2.19.2 @ /jhpce/shared/jhpce/core/conda/miniconda3-4.11.0/envs/svnR-4.2/bin/pandoc

─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────
 package              * version  date (UTC) lib source
 abind                  1.4-5    2016-07-21 [2] CRAN (R 4.2.1)
 assertthat             0.2.1    2019-03-21 [2] CRAN (R 4.2.1)
 beachmat               2.12.0   2022-04-26 [2] Bioconductor
 beeswarm               0.4.0    2021-06-01 [2] CRAN (R 4.2.1)
 Biobase              * 2.56.0   2022-04-26 [2] Bioconductor
 BiocGenerics         * 0.42.0   2022-04-26 [2] Bioconductor
 BiocNeighbors          1.14.0   2022-04-26 [2] Bioconductor
 BiocParallel           1.30.3   2022-06-05 [2] Bioconductor
 BiocSingular           1.12.0   2022-04-26 [2] Bioconductor
 bitops                 1.0-7    2021-04-24 [2] CRAN (R 4.2.1)
 cli                    3.4.1    2022-09-23 [1] CRAN (R 4.2.1)
 cluster                2.1.4    2022-08-22 [3] CRAN (R 4.2.1)
 codetools              0.2-18   2020-11-04 [3] CRAN (R 4.2.1)
 colorspace             2.0-3    2022-02-21 [2] CRAN (R 4.2.1)
 CompQuadForm           1.4.3    2017-04-12 [1] CRAN (R 4.2.1)
 cowplot                1.1.1    2020-12-30 [2] CRAN (R 4.2.1)
 data.table             1.14.2   2021-09-27 [2] CRAN (R 4.2.1)
 DBI                    1.1.3    2022-06-18 [2] CRAN (R 4.2.1)
 DelayedArray           0.22.0   2022-04-26 [2] Bioconductor
 DelayedMatrixStats     1.18.0   2022-04-26 [2] Bioconductor
 deldir                 1.0-6    2021-10-23 [2] CRAN (R 4.2.1)
 digest                 0.6.30   2022-10-18 [1] CRAN (R 4.2.1)
 dplyr                * 1.0.10   2022-09-01 [1] CRAN (R 4.2.1)
 dqrng                  0.3.0    2021-05-01 [2] CRAN (R 4.2.1)
 DR.SC                  3.0      2022-11-15 [1] CRAN (R 4.2.1)
 DropletUtils           1.16.0   2022-04-26 [2] Bioconductor
 edgeR                  3.38.4   2022-08-07 [2] Bioconductor
 ellipsis               0.3.2    2021-04-29 [2] CRAN (R 4.2.1)
 fansi                  1.0.3    2022-03-24 [2] CRAN (R 4.2.1)
 fastmap                1.1.0    2021-01-25 [2] CRAN (R 4.2.1)
 fitdistrplus           1.1-8    2022-03-10 [1] CRAN (R 4.2.1)
 future                 1.29.0   2022-11-06 [1] CRAN (R 4.2.1)
 future.apply           1.10.0   2022-11-05 [1] CRAN (R 4.2.1)
 generics               0.1.3    2022-07-05 [2] CRAN (R 4.2.1)
 GenomeInfoDb         * 1.32.3   2022-08-09 [2] Bioconductor
 GenomeInfoDbData       1.2.8    2022-08-30 [2] Bioconductor
 GenomicRanges        * 1.48.0   2022-04-26 [2] Bioconductor
 ggbeeswarm             0.6.0    2017-08-07 [2] CRAN (R 4.2.1)
 ggplot2                3.4.0    2022-11-04 [1] CRAN (R 4.2.1)
 ggrepel                0.9.1    2021-01-15 [2] CRAN (R 4.2.1)
 ggridges               0.5.3    2021-01-08 [2] CRAN (R 4.2.1)
 ggthemes               4.2.4    2021-01-20 [1] CRAN (R 4.2.1)
 GiRaF                  1.0.1    2020-10-14 [1] CRAN (R 4.2.1)
 globals                0.16.1   2022-08-28 [2] CRAN (R 4.2.1)
 glue                   1.6.2    2022-02-24 [2] CRAN (R 4.2.1)
 goftest                1.2-3    2021-10-07 [1] CRAN (R 4.2.1)
 gridExtra              2.3      2017-09-09 [2] CRAN (R 4.2.1)
 gtable                 0.3.1    2022-09-01 [1] CRAN (R 4.2.1)
 gtools               * 3.9.3    2022-07-11 [2] CRAN (R 4.2.1)
 HDF5Array              1.24.2   2022-08-02 [2] Bioconductor
 here                 * 1.0.1    2020-12-13 [2] CRAN (R 4.2.1)
 htmltools              0.5.3    2022-07-18 [2] CRAN (R 4.2.1)
 htmlwidgets            1.5.4    2021-09-08 [2] CRAN (R 4.2.1)
 httpuv                 1.6.5    2022-01-05 [2] CRAN (R 4.2.1)
 httr                   1.4.4    2022-08-17 [2] CRAN (R 4.2.1)
 ica                    1.0-3    2022-07-08 [1] CRAN (R 4.2.1)
 igraph                 1.3.4    2022-07-19 [2] CRAN (R 4.2.1)
 IRanges              * 2.30.1   2022-08-18 [2] Bioconductor
 irlba                  2.3.5    2021-12-06 [2] CRAN (R 4.2.1)
 jsonlite               1.8.3    2022-10-21 [1] CRAN (R 4.2.1)
 KernSmooth             2.23-20  2021-05-03 [3] CRAN (R 4.2.1)
 later                  1.3.0    2021-08-18 [2] CRAN (R 4.2.1)
 lattice                0.20-45  2021-09-22 [3] CRAN (R 4.2.1)
 lazyeval               0.2.2    2019-03-15 [2] CRAN (R 4.2.1)
 leiden                 0.4.3    2022-09-10 [1] CRAN (R 4.2.1)
 lifecycle              1.0.3    2022-10-07 [1] CRAN (R 4.2.1)
 limma                  3.52.2   2022-06-19 [2] Bioconductor
 listenv                0.8.0    2019-12-05 [2] CRAN (R 4.2.1)
 lmtest                 0.9-40   2022-03-21 [2] CRAN (R 4.2.1)
 locfit                 1.5-9.6  2022-07-11 [2] CRAN (R 4.2.1)
 magick                 2.7.3    2021-08-18 [2] CRAN (R 4.2.1)
 magrittr               2.0.3    2022-03-30 [2] CRAN (R 4.2.1)
 MASS                   7.3-58.1 2022-08-03 [3] CRAN (R 4.2.1)
 Matrix                 1.5-1    2022-09-13 [1] CRAN (R 4.2.1)
 MatrixGenerics       * 1.8.1    2022-06-26 [2] Bioconductor
 matrixStats          * 0.62.0   2022-04-19 [2] CRAN (R 4.2.1)
 mclust                 5.4.10   2022-05-20 [2] CRAN (R 4.2.1)
 mime                   0.12     2021-09-28 [2] CRAN (R 4.2.1)
 miniUI                 0.1.1.1  2018-05-18 [2] CRAN (R 4.2.1)
 munsell                0.5.0    2018-06-12 [2] CRAN (R 4.2.1)
 nlme                   3.1-158  2022-06-15 [3] CRAN (R 4.2.1)
 parallelly             1.32.1   2022-07-21 [2] CRAN (R 4.2.1)
 patchwork              1.1.2    2022-08-19 [2] CRAN (R 4.2.1)
 pbapply                1.5-0    2021-09-16 [2] CRAN (R 4.2.1)
 pillar                 1.8.1    2022-08-19 [2] CRAN (R 4.2.1)
 pkgconfig              2.0.3    2019-09-22 [2] CRAN (R 4.2.1)
 plotly                 4.10.0   2021-10-09 [2] CRAN (R 4.2.1)
 plyr                   1.8.7    2022-03-24 [2] CRAN (R 4.2.1)
 png                    0.1-7    2013-12-03 [2] CRAN (R 4.2.1)
 polyclip               1.10-4   2022-10-20 [1] CRAN (R 4.2.1)
 PRECAST              * 1.3      2022-12-12 [1] Github (feiyoung/PRECAST@9611dcf)
 progressr              0.11.0   2022-09-02 [1] CRAN (R 4.2.1)
 promises               1.2.0.1  2021-02-11 [2] CRAN (R 4.2.1)
 purrr                * 0.3.5    2022-10-06 [1] CRAN (R 4.2.1)
 R.methodsS3            1.8.2    2022-06-13 [2] CRAN (R 4.2.1)
 R.oo                   1.25.0   2022-06-12 [2] CRAN (R 4.2.1)
 R.utils                2.12.0   2022-06-28 [2] CRAN (R 4.2.1)
 R6                     2.5.1    2021-08-19 [2] CRAN (R 4.2.1)
 RANN                   2.6.1    2019-01-08 [2] CRAN (R 4.2.1)
 RColorBrewer           1.1-3    2022-04-03 [2] CRAN (R 4.2.1)
 Rcpp                   1.0.9    2022-07-08 [2] CRAN (R 4.2.1)
 RcppAnnoy              0.0.19   2021-07-30 [2] CRAN (R 4.2.1)
 RCurl                  1.98-1.8 2022-07-30 [2] CRAN (R 4.2.1)
 reshape2               1.4.4    2020-04-09 [2] CRAN (R 4.2.1)
 reticulate             1.25     2022-05-11 [2] CRAN (R 4.2.1)
 rhdf5                  2.40.0   2022-04-26 [2] Bioconductor
 rhdf5filters           1.8.0    2022-04-26 [2] Bioconductor
 Rhdf5lib               1.18.2   2022-05-15 [2] Bioconductor
 rjson                  0.2.21   2022-01-09 [2] CRAN (R 4.2.1)
 rlang                  1.0.6    2022-09-24 [1] CRAN (R 4.2.1)
 ROCR                   1.0-11   2020-05-02 [2] CRAN (R 4.2.1)
 rprojroot              2.0.3    2022-04-02 [2] CRAN (R 4.2.1)
 rsvd                   1.0.5    2021-04-16 [2] CRAN (R 4.2.1)
 Rtsne                  0.16     2022-04-17 [2] CRAN (R 4.2.1)
 S4Vectors            * 0.34.0   2022-04-26 [2] Bioconductor
 ScaledMatrix           1.4.0    2022-04-26 [2] Bioconductor
 scales                 1.2.1    2022-08-20 [2] CRAN (R 4.2.1)
 scater                 1.24.0   2022-04-26 [2] Bioconductor
 scattermore            0.8      2022-02-14 [1] CRAN (R 4.2.1)
 sctransform            0.3.5    2022-09-21 [1] CRAN (R 4.2.1)
 scuttle                1.6.3    2022-08-23 [2] Bioconductor
 sessioninfo          * 1.2.2    2021-12-06 [2] CRAN (R 4.2.1)
 Seurat               * 4.3.0    2022-11-18 [1] CRAN (R 4.2.1)
 SeuratObject         * 4.1.3    2022-11-07 [1] CRAN (R 4.2.1)
 shiny                  1.7.2    2022-07-19 [2] CRAN (R 4.2.1)
 SingleCellExperiment * 1.18.0   2022-04-26 [2] Bioconductor
 sp                     1.5-1    2022-11-07 [1] CRAN (R 4.2.1)
 sparseMatrixStats      1.8.0    2022-04-26 [2] Bioconductor
 SpatialExperiment    * 1.6.1    2022-08-09 [2] Bioconductor
 spatstat.data          3.0-0    2022-10-21 [1] CRAN (R 4.2.1)
 spatstat.explore       3.0-5    2022-11-10 [1] CRAN (R 4.2.1)
 spatstat.geom          3.0-3    2022-10-25 [1] CRAN (R 4.2.1)
 spatstat.random        3.0-1    2022-11-03 [1] CRAN (R 4.2.1)
 spatstat.sparse        3.0-0    2022-10-21 [1] CRAN (R 4.2.1)
 spatstat.utils         3.0-1    2022-10-19 [1] CRAN (R 4.2.1)
 stringi                1.7.8    2022-07-11 [2] CRAN (R 4.2.1)
 stringr                1.4.1    2022-08-20 [2] CRAN (R 4.2.1)
 SummarizedExperiment * 1.26.1   2022-04-29 [2] Bioconductor
 survival               3.4-0    2022-08-09 [3] CRAN (R 4.2.1)
 tensor                 1.5      2012-05-05 [1] CRAN (R 4.2.1)
 tibble                 3.1.8    2022-07-22 [2] CRAN (R 4.2.1)
 tictoc               * 1.1      2022-09-03 [1] CRAN (R 4.2.1)
 tidyr                  1.2.1    2022-09-08 [1] CRAN (R 4.2.1)
 tidyselect             1.2.0    2022-10-10 [1] CRAN (R 4.2.1)
 utf8                   1.2.2    2021-07-24 [2] CRAN (R 4.2.1)
 uwot                   0.1.14   2022-08-22 [2] CRAN (R 4.2.1)
 vctrs                  0.5.0    2022-10-22 [1] CRAN (R 4.2.1)
 vipor                  0.4.5    2017-03-22 [2] CRAN (R 4.2.1)
 viridis                0.6.2    2021-10-13 [2] CRAN (R 4.2.1)
 viridisLite            0.4.1    2022-08-22 [2] CRAN (R 4.2.1)
 xtable                 1.8-4    2019-04-21 [2] CRAN (R 4.2.1)
 XVector                0.36.0   2022-04-26 [2] Bioconductor
 zlibbioc               1.42.0   2022-04-26 [2] Bioconductor
 zoo                    1.8-10   2022-04-15 [2] CRAN (R 4.2.1)

 [1] /users/aramnaut/R/4.2
 [2] /jhpce/shared/jhpce/core/conda/miniconda3-4.11.0/envs/svnR-4.2/R/4.2/lib64/R/site-library
 [3] /jhpce/shared/jhpce/core/conda/miniconda3-4.11.0/envs/svnR-4.2/R/4.2/lib64/R/library

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
**** Job ends ****
Fri Mar 31 17:16:11 EDT 2023
Adding LIBD modules
Loading git
Loading LIBD module for git-status-size/github
Loading LIBD module for git-lfs/2.8.0
Loading LIBD module for rmate/1.5.9
Loading LIBD module for ruby/2.6.4p104
Loading conda_R/4.2
**** Job starts ****
Sun Apr  2 19:01:01 EDT 2023
**** JHPCE info ****
User: aramnaut
Job id: 3092213
Job name: PRECAST_k5-15
Hostname: compute-098.cm.cluster
Task id: 8
Unloading conda_R/4.2
Loading conda_R/4.2

Currently Loaded Modules:
  1) matlab/R2019a     6) COMMUNITY_CENTOS7_DEFAULT_ENV  11) ruby/2.6.4p104
  2) stata/17          7) JHPCE_CENTOS7_DEFAULT_ENV      12) rmate/1.5.9
  3) JHPCE_tools/1.0   8) git-status-size/github         13) conda/3-4.11.0
  4) sge/8.1.9         9) git/2.28.0                     14) conda_R/4.2
  5) gcc/4.4.7        10) git-lfs/2.8.0

 

Filter spots and features from Raw count data...
 
 
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Select common top variable genes  for multiple samples...
Filter spots and features from SVGs(HVGs) count data...
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[[1]]
An object of class Seurat 
2000 features across 4770 samples within 1 assay 
Active assay: RNA (2000 features, 851 variable features)

[[2]]
An object of class Seurat 
2000 features across 3434 samples within 1 assay 
Active assay: RNA (2000 features, 529 variable features)

[[3]]
An object of class Seurat 
2000 features across 4727 samples within 1 assay 
Active assay: RNA (2000 features, 1094 variable features)

[[4]]
An object of class Seurat 
2000 features across 3774 samples within 1 assay 
Active assay: RNA (2000 features, 654 variable features)

[[5]]
An object of class Seurat 
2000 features across 4563 samples within 1 assay 
Active assay: RNA (2000 features, 1032 variable features)

[[6]]
An object of class Seurat 
2000 features across 3847 samples within 1 assay 
Active assay: RNA (2000 features, 1076 variable features)

[[7]]
An object of class Seurat 
2000 features across 3414 samples within 1 assay 
Active assay: RNA (2000 features, 690 variable features)

[[8]]
An object of class Seurat 
2000 features across 4865 samples within 1 assay 
Active assay: RNA (2000 features, 1152 variable features)

[[9]]
An object of class Seurat 
2000 features across 4920 samples within 1 assay 
Active assay: RNA (2000 features, 1139 variable features)

[[10]]
An object of class Seurat 
2000 features across 4975 samples within 1 assay 
Active assay: RNA (2000 features, 1259 variable features)

[[11]]
An object of class Seurat 
2000 features across 4254 samples within 1 assay 
Active assay: RNA (2000 features, 1043 variable features)

[[12]]
An object of class Seurat 
2000 features across 3784 samples within 1 assay 
Active assay: RNA (2000 features, 907 variable features)

[[13]]
An object of class Seurat 
2000 features across 4868 samples within 1 assay 
Active assay: RNA (2000 features, 1070 variable features)

[[14]]
An object of class Seurat 
2000 features across 4594 samples within 1 assay 
Active assay: RNA (2000 features, 1066 variable features)

[[15]]
An object of class Seurat 
2000 features across 3208 samples within 1 assay 
Active assay: RNA (2000 features, 500 variable features)

[[16]]
An object of class Seurat 
2000 features across 4677 samples within 1 assay 
Active assay: RNA (2000 features, 676 variable features)

Neighbors were identified for 4770 out of 4770 spots.
Neighbors were identified for 3434 out of 3434 spots.
Neighbors were identified for 4727 out of 4727 spots.
Neighbors were identified for 3774 out of 3774 spots.
Neighbors were identified for 4563 out of 4563 spots.
Neighbors were identified for 3846 out of 3847 spots.
Neighbors were identified for 3414 out of 3414 spots.
Neighbors were identified for 4865 out of 4865 spots.
Neighbors were identified for 4918 out of 4920 spots.
Neighbors were identified for 4975 out of 4975 spots.
Neighbors were identified for 4252 out of 4254 spots.
Neighbors were identified for 3784 out of 3784 spots.
Neighbors were identified for 4868 out of 4868 spots.
Neighbors were identified for 4594 out of 4594 spots.
Neighbors were identified for 3208 out of 3208 spots.
Neighbors were identified for 4677 out of 4677 spots.
Intergrative data info.: 16 samples, 2000 genes X 68674 spots------
PRECAST model setting: error_heter=TRUE, Sigma_equal=FALSE, Sigma_diag=TRUE, mix_prop_heter=TRUE
Start computing intial values... 

fitting ...
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
----Fitting PRECAST model----------------

variable initialize finish! 
predict Y and V! 
diff Energy = 5.087923 
diff Energy = 24.004213 
diff Energy = 22.241091 
Finish ICM step! 
iter = 2, loglik= 6719861.000000, dloglik=1.003129 
predict Y and V! 
diff Energy = 21.209729 
diff Energy = 5.620818 
diff Energy = 13.006190 
diff Energy = 0.828049 
diff Energy = 7.013516 
diff Energy = 4.463865 
diff Energy = 9.683832 
diff Energy = 7.494573 
diff Energy = 5.644664 
diff Energy = 1.248066 
diff Energy = 10.843733 
diff Energy = 7.956198 
diff Energy = 4.261764 
diff Energy = 32.327569 
diff Energy = 2.675352 
diff Energy = 7.927636 
Finish ICM step! 
iter = 3, loglik= 7359671.000000, dloglik=0.095212 
predict Y and V! 
diff Energy = 12.756460 
diff Energy = 13.315717 
diff Energy = 5.324523 
diff Energy = 5.664189 
diff Energy = 15.433902 
diff Energy = 13.733324 
diff Energy = 8.091661 
diff Energy = 24.003155 
diff Energy = 1.846670 
diff Energy = 24.030100 
diff Energy = 21.774637 
diff Energy = 20.776616 
diff Energy = 27.097272 
diff Energy = 38.531993 
diff Energy = 11.769373 
diff Energy = 8.850147 
Finish ICM step! 
iter = 4, loglik= 7559984.500000, dloglik=0.027218 
predict Y and V! 
diff Energy = 39.291718 
diff Energy = 31.761236 
diff Energy = 17.007938 
diff Energy = 17.434712 
diff Energy = 46.976596 
diff Energy = 4.241356 
diff Energy = 9.130853 
diff Energy = 10.195164 
diff Energy = 5.272544 
diff Energy = 17.407228 
diff Energy = 20.186040 
diff Energy = 8.219846 
diff Energy = 52.032609 
diff Energy = 4.674070 
diff Energy = 8.017316 
Finish ICM step! 
iter = 5, loglik= 7672725.000000, dloglik=0.014913 
predict Y and V! 
diff Energy = 23.438675 
diff Energy = 8.728940 
diff Energy = 12.594196 
diff Energy = 1.213226 
diff Energy = 22.722355 
diff Energy = 3.644327 
diff Energy = 2.796366 
diff Energy = 0.144269 
diff Energy = 0.348373 
diff Energy = 12.482223 
diff Energy = 0.267975 
diff Energy = 0.091235 
diff Energy = 14.075511 
diff Energy = 8.578565 
diff Energy = 0.020909 
Finish ICM step! 
iter = 6, loglik= 7742994.500000, dloglik=0.009158 
predict Y and V! 
diff Energy = 1.484336 
diff Energy = 17.413394 
diff Energy = 4.356480 
diff Energy = 19.198135 
diff Energy = 1.355554 
diff Energy = 5.526774 
diff Energy = 2.416973 
diff Energy = 4.567714 
diff Energy = 0.770580 
diff Energy = 1.011170 
diff Energy = 2.483921 
diff Energy = 2.849848 
diff Energy = 25.185470 
diff Energy = 9.865568 
Finish ICM step! 
iter = 7, loglik= 7789154.500000, dloglik=0.005962 
predict Y and V! 
diff Energy = 5.802388 
diff Energy = 4.905175 
diff Energy = 2.966223 
diff Energy = 9.300971 
diff Energy = 4.129075 
diff Energy = 0.766893 
diff Energy = 0.877441 
diff Energy = 4.303472 
diff Energy = 0.242567 
diff Energy = 2.208735 
diff Energy = 1.686178 
diff Energy = 3.091349 
diff Energy = 1.518422 
diff Energy = 5.065416 
diff Energy = 0.232903 
Finish ICM step! 
iter = 8, loglik= 7820981.500000, dloglik=0.004086 
predict Y and V! 
diff Energy = 13.794495 
diff Energy = 1.406164 
diff Energy = 6.973731 
diff Energy = 16.213754 
diff Energy = 0.004064 
diff Energy = 2.390143 
diff Energy = 4.203004 
diff Energy = 9.149467 
diff Energy = 7.675555 
diff Energy = 1.094340 
diff Energy = 2.003264 
diff Energy = 0.059169 
diff Energy = 0.869538 
Finish ICM step! 
iter = 9, loglik= 7844065.500000, dloglik=0.002952 
predict Y and V! 
diff Energy = 2.197704 
diff Energy = 1.941543 
diff Energy = 2.359133 
diff Energy = 0.745209 
diff Energy = 0.742217 
diff Energy = 1.185628 
diff Energy = 0.328398 
diff Energy = 4.461327 
diff Energy = 5.640634 
diff Energy = 0.205963 
diff Energy = 0.744165 
diff Energy = 0.950775 
Finish ICM step! 
iter = 10, loglik= 7861217.000000, dloglik=0.002187 
predict Y and V! 
diff Energy = 2.299365 
diff Energy = 14.226643 
diff Energy = 1.715553 
diff Energy = 0.417549 
diff Energy = 0.521242 
diff Energy = 4.697432 
diff Energy = 3.806966 
diff Energy = 1.085694 
diff Energy = 1.609449 
diff Energy = 0.968993 
diff Energy = 1.216772 
diff Energy = 0.706036 
Finish ICM step! 
iter = 11, loglik= 7874505.500000, dloglik=0.001690 
predict Y and V! 
diff Energy = 2.357845 
diff Energy = 4.846082 
diff Energy = 0.950856 
diff Energy = 1.853931 
diff Energy = 0.358849 
diff Energy = 3.875619 
diff Energy = 0.677381 
diff Energy = 1.781683 
diff Energy = 8.503651 
diff Energy = 1.776808 
Finish ICM step! 
iter = 12, loglik= 7885141.000000, dloglik=0.001351 
predict Y and V! 
diff Energy = 2.785074 
diff Energy = 1.017692 
diff Energy = 1.183823 
diff Energy = 7.177628 
diff Energy = 2.083364 
diff Energy = 4.256440 
diff Energy = 6.080435 
diff Energy = 0.178454 
diff Energy = 1.059301 
Finish ICM step! 
iter = 13, loglik= 7893597.500000, dloglik=0.001072 
predict Y and V! 
diff Energy = 1.014245 
diff Energy = 0.770396 
diff Energy = 5.466605 
diff Energy = 0.011080 
diff Energy = 0.388820 
diff Energy = 0.311525 
diff Energy = 0.030166 
diff Energy = 3.497817 
Finish ICM step! 
iter = 14, loglik= 7900679.500000, dloglik=0.000897 
predict Y and V! 
diff Energy = 2.544044 
diff Energy = 0.616033 
diff Energy = 2.897912 
diff Energy = 4.936393 
diff Energy = 1.971972 
diff Energy = 0.584891 
diff Energy = 5.394240 
diff Energy = 0.901594 
diff Energy = 0.440990 
diff Energy = 5.871698 
diff Energy = 1.986526 
Finish ICM step! 
iter = 15, loglik= 7906523.500000, dloglik=0.000740 
predict Y and V! 
diff Energy = 3.223330 
diff Energy = 7.858630 
diff Energy = 0.099347 
diff Energy = 0.123503 
diff Energy = 1.203589 
diff Energy = 0.497190 
diff Energy = 2.448231 
Finish ICM step! 
iter = 16, loglik= 7911548.500000, dloglik=0.000636 
predict Y and V! 
diff Energy = 0.785400 
diff Energy = 2.361481 
diff Energy = 0.864448 
diff Energy = 2.593876 
diff Energy = 7.880314 
diff Energy = 2.424927 
diff Energy = 0.570988 
diff Energy = 1.649322 
diff Energy = 3.936906 
diff Energy = 0.425257 
diff Energy = 2.408902 
Finish ICM step! 
iter = 17, loglik= 7915620.500000, dloglik=0.000515 
predict Y and V! 
diff Energy = 1.103711 
diff Energy = 0.649215 
diff Energy = 1.797970 
diff Energy = 0.553395 
diff Energy = 1.297125 
diff Energy = 4.925590 
diff Energy = 0.940698 
diff Energy = 3.031899 
diff Energy = 3.733600 
diff Energy = 1.097933 
diff Energy = 0.531607 
Finish ICM step! 
iter = 18, loglik= 7919429.500000, dloglik=0.000481 
predict Y and V! 
diff Energy = 1.876657 
diff Energy = 1.192651 
diff Energy = 1.300606 
diff Energy = 1.236316 
diff Energy = 3.701472 
diff Energy = 1.360701 
diff Energy = 0.216064 
diff Energy = 5.473428 
diff Energy = 3.607513 
diff Energy = 2.683415 
diff Energy = 4.657692 
Finish ICM step! 
iter = 19, loglik= 7922669.500000, dloglik=0.000409 
predict Y and V! 
diff Energy = 3.103498 
diff Energy = 3.425730 
diff Energy = 0.388293 
diff Energy = 0.108391 
diff Energy = 0.549837 
diff Energy = 1.002867 
diff Energy = 1.088791 
diff Energy = 0.881116 
diff Energy = 3.353187 
diff Energy = 0.094205 
diff Energy = 2.226352 
Finish ICM step! 
iter = 20, loglik= 7925603.500000, dloglik=0.000370 
predict Y and V! 
diff Energy = 5.717347 
diff Energy = 2.392766 
diff Energy = 4.021045 
diff Energy = 1.119675 
diff Energy = 1.096311 
diff Energy = 2.400450 
diff Energy = 4.741436 
diff Energy = 4.651606 
diff Energy = 0.039695 
diff Energy = 1.219440 
diff Energy = 0.467361 
Finish ICM step! 
iter = 21, loglik= 7928185.500000, dloglik=0.000326 
predict Y and V! 
diff Energy = 2.583534 
diff Energy = 0.415044 
diff Energy = 6.166930 
diff Energy = 0.081357 
diff Energy = 1.431486 
diff Energy = 1.369643 
diff Energy = 0.229779 
diff Energy = 0.613849 
diff Energy = 1.425456 
diff Energy = 0.602140 
Finish ICM step! 
iter = 22, loglik= 7930653.000000, dloglik=0.000311 
predict Y and V! 
diff Energy = 0.807539 
diff Energy = 3.461541 
diff Energy = 1.884937 
diff Energy = 1.788242 
diff Energy = 2.695824 
diff Energy = 0.876153 
Finish ICM step! 
iter = 23, loglik= 7932816.500000, dloglik=0.000273 
predict Y and V! 
diff Energy = 0.974783 
diff Energy = 2.823540 
diff Energy = 0.323311 
diff Energy = 0.322146 
diff Energy = 8.913468 
diff Energy = 0.481990 
diff Energy = 0.248877 
diff Energy = 2.846761 
diff Energy = 0.879083 
diff Energy = 0.276727 
diff Energy = 1.637565 
Finish ICM step! 
iter = 24, loglik= 7934782.000000, dloglik=0.000248 
predict Y and V! 
diff Energy = 1.267188 
diff Energy = 0.493057 
diff Energy = 0.469298 
diff Energy = 2.938366 
diff Energy = 0.890113 
diff Energy = 3.126555 
diff Energy = 1.124237 
Finish ICM step! 
iter = 25, loglik= 7936821.500000, dloglik=0.000257 
predict Y and V! 
diff Energy = 2.050121 
diff Energy = 6.915826 
diff Energy = 0.153836 
diff Energy = 2.074078 
diff Energy = 1.405734 
diff Energy = 3.326381 
Finish ICM step! 
iter = 26, loglik= 7938562.500000, dloglik=0.000219 
predict Y and V! 
diff Energy = 1.475920 
diff Energy = 5.375447 
diff Energy = 1.176887 
diff Energy = 0.981355 
diff Energy = 0.053319 
diff Energy = 1.947024 
diff Energy = 0.684774 
diff Energy = 1.088878 
diff Energy = 3.472185 
diff Energy = 1.516646 
diff Energy = 2.842699 
diff Energy = 0.427875 
Finish ICM step! 
iter = 27, loglik= 7940231.500000, dloglik=0.000210 
predict Y and V! 
diff Energy = 4.451331 
diff Energy = 0.466674 
diff Energy = 3.959954 
diff Energy = 0.052611 
diff Energy = 0.415666 
diff Energy = 2.384817 
diff Energy = 1.344343 
diff Energy = 2.563540 
Finish ICM step! 
iter = 28, loglik= 7942089.000000, dloglik=0.000234 
predict Y and V! 
diff Energy = 2.082865 
diff Energy = 0.238490 
diff Energy = 0.096894 
diff Energy = 0.081722 
diff Energy = 4.711266 
diff Energy = 0.240195 
diff Energy = 1.379690 
diff Energy = 2.546999 
diff Energy = 0.769748 
diff Energy = 0.001138 
diff Energy = 2.369786 
Finish ICM step! 
iter = 29, loglik= 7943763.000000, dloglik=0.000211 
predict Y and V! 
diff Energy = 4.586426 
diff Energy = 2.491204 
diff Energy = 0.600919 
diff Energy = 4.887453 
diff Energy = 0.605820 
diff Energy = 0.508071 
diff Energy = 0.874359 
diff Energy = 1.334672 
diff Energy = 1.397055 
diff Energy = 0.495643 
Finish ICM step! 
iter = 30, loglik= 7945517.500000, dloglik=0.000221 
4854.682 sec elapsed
[1] "Reproducibility information:"
[1] "2023-04-02 20:26:59 EDT"
    user   system  elapsed 
4687.703  465.677 5156.519 
─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.2.1 Patched (2022-08-30 r82775)
 os       CentOS Linux 7 (Core)
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       US/Eastern
 date     2023-04-02
 pandoc   2.19.2 @ /jhpce/shared/jhpce/core/conda/miniconda3-4.11.0/envs/svnR-4.2/bin/pandoc

─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────
 package              * version  date (UTC) lib source
 abind                  1.4-5    2016-07-21 [2] CRAN (R 4.2.1)
 assertthat             0.2.1    2019-03-21 [2] CRAN (R 4.2.1)
 beachmat               2.12.0   2022-04-26 [2] Bioconductor
 beeswarm               0.4.0    2021-06-01 [2] CRAN (R 4.2.1)
 Biobase              * 2.56.0   2022-04-26 [2] Bioconductor
 BiocGenerics         * 0.42.0   2022-04-26 [2] Bioconductor
 BiocNeighbors          1.14.0   2022-04-26 [2] Bioconductor
 BiocParallel           1.30.3   2022-06-05 [2] Bioconductor
 BiocSingular           1.12.0   2022-04-26 [2] Bioconductor
 bitops                 1.0-7    2021-04-24 [2] CRAN (R 4.2.1)
 cli                    3.4.1    2022-09-23 [1] CRAN (R 4.2.1)
 cluster                2.1.4    2022-08-22 [3] CRAN (R 4.2.1)
 codetools              0.2-18   2020-11-04 [3] CRAN (R 4.2.1)
 colorspace             2.0-3    2022-02-21 [2] CRAN (R 4.2.1)
 CompQuadForm           1.4.3    2017-04-12 [1] CRAN (R 4.2.1)
 cowplot                1.1.1    2020-12-30 [2] CRAN (R 4.2.1)
 data.table             1.14.2   2021-09-27 [2] CRAN (R 4.2.1)
 DBI                    1.1.3    2022-06-18 [2] CRAN (R 4.2.1)
 DelayedArray           0.22.0   2022-04-26 [2] Bioconductor
 DelayedMatrixStats     1.18.0   2022-04-26 [2] Bioconductor
 deldir                 1.0-6    2021-10-23 [2] CRAN (R 4.2.1)
 digest                 0.6.30   2022-10-18 [1] CRAN (R 4.2.1)
 dplyr                * 1.0.10   2022-09-01 [1] CRAN (R 4.2.1)
 dqrng                  0.3.0    2021-05-01 [2] CRAN (R 4.2.1)
 DR.SC                  3.0      2022-11-15 [1] CRAN (R 4.2.1)
 DropletUtils           1.16.0   2022-04-26 [2] Bioconductor
 edgeR                  3.38.4   2022-08-07 [2] Bioconductor
 ellipsis               0.3.2    2021-04-29 [2] CRAN (R 4.2.1)
 fansi                  1.0.3    2022-03-24 [2] CRAN (R 4.2.1)
 fastmap                1.1.0    2021-01-25 [2] CRAN (R 4.2.1)
 fitdistrplus           1.1-8    2022-03-10 [1] CRAN (R 4.2.1)
 future                 1.29.0   2022-11-06 [1] CRAN (R 4.2.1)
 future.apply           1.10.0   2022-11-05 [1] CRAN (R 4.2.1)
 generics               0.1.3    2022-07-05 [2] CRAN (R 4.2.1)
 GenomeInfoDb         * 1.32.3   2022-08-09 [2] Bioconductor
 GenomeInfoDbData       1.2.8    2022-08-30 [2] Bioconductor
 GenomicRanges        * 1.48.0   2022-04-26 [2] Bioconductor
 ggbeeswarm             0.6.0    2017-08-07 [2] CRAN (R 4.2.1)
 ggplot2                3.4.0    2022-11-04 [1] CRAN (R 4.2.1)
 ggrepel                0.9.1    2021-01-15 [2] CRAN (R 4.2.1)
 ggridges               0.5.3    2021-01-08 [2] CRAN (R 4.2.1)
 ggthemes               4.2.4    2021-01-20 [1] CRAN (R 4.2.1)
 GiRaF                  1.0.1    2020-10-14 [1] CRAN (R 4.2.1)
 globals                0.16.1   2022-08-28 [2] CRAN (R 4.2.1)
 glue                   1.6.2    2022-02-24 [2] CRAN (R 4.2.1)
 goftest                1.2-3    2021-10-07 [1] CRAN (R 4.2.1)
 gridExtra              2.3      2017-09-09 [2] CRAN (R 4.2.1)
 gtable                 0.3.1    2022-09-01 [1] CRAN (R 4.2.1)
 gtools               * 3.9.3    2022-07-11 [2] CRAN (R 4.2.1)
 HDF5Array              1.24.2   2022-08-02 [2] Bioconductor
 here                 * 1.0.1    2020-12-13 [2] CRAN (R 4.2.1)
 htmltools              0.5.3    2022-07-18 [2] CRAN (R 4.2.1)
 htmlwidgets            1.5.4    2021-09-08 [2] CRAN (R 4.2.1)
 httpuv                 1.6.5    2022-01-05 [2] CRAN (R 4.2.1)
 httr                   1.4.4    2022-08-17 [2] CRAN (R 4.2.1)
 ica                    1.0-3    2022-07-08 [1] CRAN (R 4.2.1)
 igraph                 1.3.4    2022-07-19 [2] CRAN (R 4.2.1)
 IRanges              * 2.30.1   2022-08-18 [2] Bioconductor
 irlba                  2.3.5    2021-12-06 [2] CRAN (R 4.2.1)
 jsonlite               1.8.3    2022-10-21 [1] CRAN (R 4.2.1)
 KernSmooth             2.23-20  2021-05-03 [3] CRAN (R 4.2.1)
 later                  1.3.0    2021-08-18 [2] CRAN (R 4.2.1)
 lattice                0.20-45  2021-09-22 [3] CRAN (R 4.2.1)
 lazyeval               0.2.2    2019-03-15 [2] CRAN (R 4.2.1)
 leiden                 0.4.3    2022-09-10 [1] CRAN (R 4.2.1)
 lifecycle              1.0.3    2022-10-07 [1] CRAN (R 4.2.1)
 limma                  3.52.2   2022-06-19 [2] Bioconductor
 listenv                0.8.0    2019-12-05 [2] CRAN (R 4.2.1)
 lmtest                 0.9-40   2022-03-21 [2] CRAN (R 4.2.1)
 locfit                 1.5-9.6  2022-07-11 [2] CRAN (R 4.2.1)
 magick                 2.7.3    2021-08-18 [2] CRAN (R 4.2.1)
 magrittr               2.0.3    2022-03-30 [2] CRAN (R 4.2.1)
 MASS                   7.3-58.1 2022-08-03 [3] CRAN (R 4.2.1)
 Matrix                 1.5-1    2022-09-13 [1] CRAN (R 4.2.1)
 MatrixGenerics       * 1.8.1    2022-06-26 [2] Bioconductor
 matrixStats          * 0.62.0   2022-04-19 [2] CRAN (R 4.2.1)
 mclust                 5.4.10   2022-05-20 [2] CRAN (R 4.2.1)
 mime                   0.12     2021-09-28 [2] CRAN (R 4.2.1)
 miniUI                 0.1.1.1  2018-05-18 [2] CRAN (R 4.2.1)
 munsell                0.5.0    2018-06-12 [2] CRAN (R 4.2.1)
 nlme                   3.1-158  2022-06-15 [3] CRAN (R 4.2.1)
 parallelly             1.32.1   2022-07-21 [2] CRAN (R 4.2.1)
 patchwork              1.1.2    2022-08-19 [2] CRAN (R 4.2.1)
 pbapply                1.5-0    2021-09-16 [2] CRAN (R 4.2.1)
 pillar                 1.8.1    2022-08-19 [2] CRAN (R 4.2.1)
 pkgconfig              2.0.3    2019-09-22 [2] CRAN (R 4.2.1)
 plotly                 4.10.0   2021-10-09 [2] CRAN (R 4.2.1)
 plyr                   1.8.7    2022-03-24 [2] CRAN (R 4.2.1)
 png                    0.1-7    2013-12-03 [2] CRAN (R 4.2.1)
 polyclip               1.10-4   2022-10-20 [1] CRAN (R 4.2.1)
 PRECAST              * 1.3      2022-12-12 [1] Github (feiyoung/PRECAST@9611dcf)
 progressr              0.11.0   2022-09-02 [1] CRAN (R 4.2.1)
 promises               1.2.0.1  2021-02-11 [2] CRAN (R 4.2.1)
 purrr                * 0.3.5    2022-10-06 [1] CRAN (R 4.2.1)
 R.methodsS3            1.8.2    2022-06-13 [2] CRAN (R 4.2.1)
 R.oo                   1.25.0   2022-06-12 [2] CRAN (R 4.2.1)
 R.utils                2.12.0   2022-06-28 [2] CRAN (R 4.2.1)
 R6                     2.5.1    2021-08-19 [2] CRAN (R 4.2.1)
 RANN                   2.6.1    2019-01-08 [2] CRAN (R 4.2.1)
 RColorBrewer           1.1-3    2022-04-03 [2] CRAN (R 4.2.1)
 Rcpp                   1.0.9    2022-07-08 [2] CRAN (R 4.2.1)
 RcppAnnoy              0.0.19   2021-07-30 [2] CRAN (R 4.2.1)
 RCurl                  1.98-1.8 2022-07-30 [2] CRAN (R 4.2.1)
 reshape2               1.4.4    2020-04-09 [2] CRAN (R 4.2.1)
 reticulate             1.25     2022-05-11 [2] CRAN (R 4.2.1)
 rhdf5                  2.40.0   2022-04-26 [2] Bioconductor
 rhdf5filters           1.8.0    2022-04-26 [2] Bioconductor
 Rhdf5lib               1.18.2   2022-05-15 [2] Bioconductor
 rjson                  0.2.21   2022-01-09 [2] CRAN (R 4.2.1)
 rlang                  1.0.6    2022-09-24 [1] CRAN (R 4.2.1)
 ROCR                   1.0-11   2020-05-02 [2] CRAN (R 4.2.1)
 rprojroot              2.0.3    2022-04-02 [2] CRAN (R 4.2.1)
 rsvd                   1.0.5    2021-04-16 [2] CRAN (R 4.2.1)
 Rtsne                  0.16     2022-04-17 [2] CRAN (R 4.2.1)
 S4Vectors            * 0.34.0   2022-04-26 [2] Bioconductor
 ScaledMatrix           1.4.0    2022-04-26 [2] Bioconductor
 scales                 1.2.1    2022-08-20 [2] CRAN (R 4.2.1)
 scater                 1.24.0   2022-04-26 [2] Bioconductor
 scattermore            0.8      2022-02-14 [1] CRAN (R 4.2.1)
 sctransform            0.3.5    2022-09-21 [1] CRAN (R 4.2.1)
 scuttle                1.6.3    2022-08-23 [2] Bioconductor
 sessioninfo          * 1.2.2    2021-12-06 [2] CRAN (R 4.2.1)
 Seurat               * 4.3.0    2022-11-18 [1] CRAN (R 4.2.1)
 SeuratObject         * 4.1.3    2022-11-07 [1] CRAN (R 4.2.1)
 shiny                  1.7.2    2022-07-19 [2] CRAN (R 4.2.1)
 SingleCellExperiment * 1.18.0   2022-04-26 [2] Bioconductor
 sp                     1.5-1    2022-11-07 [1] CRAN (R 4.2.1)
 sparseMatrixStats      1.8.0    2022-04-26 [2] Bioconductor
 SpatialExperiment    * 1.6.1    2022-08-09 [2] Bioconductor
 spatstat.data          3.0-0    2022-10-21 [1] CRAN (R 4.2.1)
 spatstat.explore       3.0-5    2022-11-10 [1] CRAN (R 4.2.1)
 spatstat.geom          3.0-3    2022-10-25 [1] CRAN (R 4.2.1)
 spatstat.random        3.0-1    2022-11-03 [1] CRAN (R 4.2.1)
 spatstat.sparse        3.0-0    2022-10-21 [1] CRAN (R 4.2.1)
 spatstat.utils         3.0-1    2022-10-19 [1] CRAN (R 4.2.1)
 stringi                1.7.8    2022-07-11 [2] CRAN (R 4.2.1)
 stringr                1.4.1    2022-08-20 [2] CRAN (R 4.2.1)
 SummarizedExperiment * 1.26.1   2022-04-29 [2] Bioconductor
 survival               3.4-0    2022-08-09 [3] CRAN (R 4.2.1)
 tensor                 1.5      2012-05-05 [1] CRAN (R 4.2.1)
 tibble                 3.1.8    2022-07-22 [2] CRAN (R 4.2.1)
 tictoc               * 1.1      2022-09-03 [1] CRAN (R 4.2.1)
 tidyr                  1.2.1    2022-09-08 [1] CRAN (R 4.2.1)
 tidyselect             1.2.0    2022-10-10 [1] CRAN (R 4.2.1)
 utf8                   1.2.2    2021-07-24 [2] CRAN (R 4.2.1)
 uwot                   0.1.14   2022-08-22 [2] CRAN (R 4.2.1)
 vctrs                  0.5.0    2022-10-22 [1] CRAN (R 4.2.1)
 vipor                  0.4.5    2017-03-22 [2] CRAN (R 4.2.1)
 viridis                0.6.2    2021-10-13 [2] CRAN (R 4.2.1)
 viridisLite            0.4.1    2022-08-22 [2] CRAN (R 4.2.1)
 xtable                 1.8-4    2019-04-21 [2] CRAN (R 4.2.1)
 XVector                0.36.0   2022-04-26 [2] Bioconductor
 zlibbioc               1.42.0   2022-04-26 [2] Bioconductor
 zoo                    1.8-10   2022-04-15 [2] CRAN (R 4.2.1)

 [1] /users/aramnaut/R/4.2
 [2] /jhpce/shared/jhpce/core/conda/miniconda3-4.11.0/envs/svnR-4.2/R/4.2/lib64/R/site-library
 [3] /jhpce/shared/jhpce/core/conda/miniconda3-4.11.0/envs/svnR-4.2/R/4.2/lib64/R/library

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
**** Job ends ****
Sun Apr  2 20:27:00 EDT 2023
